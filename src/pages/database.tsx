/* eslint-disable @next/next/no-img-element */
import { type NextPage } from "next";
import Head from "next/head";
import InfiniteScroll from "react-infinite-scroll-component";
import moment from "moment";
import { api } from "y/utils/api";

const Database: NextPage = () => {
  const {
    data,
    // isFetching,
    isLoading,
    // isFetchingNextPage,
    fetchNextPage,
    hasNextPage,
  } = api.posts.getAll.useInfiniteQuery(
    { limit: 20 },
    {
      getNextPageParam: (lastPage) => lastPage.nextCursor,
    }
  );

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="container mx-auto mt-7">
        <h1 className="text-2xl font-bold">Last posts</h1>
        <div id="scroll" className="mt-4 h-[80vh] overflow-y-auto pr-2">
          {isLoading || !data ? (
            <p>Loading...</p>
          ) : (
            <div className="border-x border-gray-200">
              <InfiniteScroll
                dataLength={data.pages.reduce((acc, page) => {
                  return acc + page.posts.length;
                }, 0)}
                next={fetchNextPage}
                hasMore={hasNextPage as boolean}
                loader={<h4>Loading...</h4>}
                scrollableTarget="scroll"
                scrollThreshold={0.9} //hacer fetch cuando el scroll vaya en 50%
                endMessage={
                  <p style={{ textAlign: "center" }}>
                    <b>Yay! You have seen it all</b>
                  </p>
                }
              >
                {data.pages.map((page) =>
                  page.posts.map((post) => (
                    <div key={post.id} className="my-2 border-b p-4">
                      <div className="flex items-center justify-between">
                        <div className="flex items-center gap-3">
                          <img
                            src={post.authorImage as string}
                            alt=""
                            className="inline-block h-10 w-10 rounded-full ring-2 ring-white"
                          />
                          <p className="text-xl">{post.author}</p>
                        </div>
                        <p className="text-sm text-gray-500">
                          {moment(post.createdAt).format("DD-MM-YYYY hh:mm")}
                        </p>
                      </div>
                      <p className="mt-3 text-lg font-medium">{post.title}</p>
                      <p>{post.content}</p>
                    </div>
                  ))
                )}
              </InfiniteScroll>
            </div>
          )}
        </div>
      </main>
    </>
  );
};

export default Database;
